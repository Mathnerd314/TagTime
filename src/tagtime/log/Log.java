/*
 * Copyright 2011 Joseph Cloutier, Daniel Reeves, Bethany Soule
 * 
 * This file is part of TagTime.
 * 
 * TagTime is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 * 
 * TagTime is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with TagTime. If not, see <http://www.gnu.org/licenses/>.
 */

package tagtime.log;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;

import tagtime.Main;

/**
 * Keeps a persistent log of all tag data, and (optionally) submits the
 * data to Beeminder. It additionally tracks what data has and has not
 * been submitted yet, so if the user is offline and Beeminder can't be
 * reached, the data can be submitted later.
 */
public class Log {
	private static Log instance;
	private final BufferedWriter out;
	
	public static Log getInstance() {
		if(instance == null) {
			try {
				instance = new Log();
			} catch(IOException e) {
				e.printStackTrace();
				instance = null;
			}
		}
		
		return instance;
	}
	
	private Log() throws IOException {
		File logFile = new File(Main.getDataDirectory().getPath() + "/" +
					Main.getSettings().username + ".log");
		logFile.createNewFile();
		
		out = new BufferedWriter(new FileWriter(logFile, true));
	}
	
	/**
	 * Logs the data for the current ping, but does not submit it to
	 * Beeminder.
	 * @param timestamp The time, in milliseconds, corresponding to the
	 *            data. Assuming this data was generated by a standard
	 *            tag popup window, this should be the time the window
	 *            was created.
	 * @param data The data to log. This should include both
	 *            user-generated tags and any automatically-generated
	 *            data, but it does not need to include a timestamp.
	 */
	public void log(long timestamp, String data) {
		//start with a timestamp
		//(note: Unix time is in seconds, not milliseconds)
		String annotatedData = Long.toString(timestamp / 1000)
					//add the data
					+ " " + data;
		
		//pad the string with spaces until it is 55 characters long
		int paddingNeeded = 55 - annotatedData.length();
		if(paddingNeeded > 0) {
			annotatedData += String.format("%1$" + paddingNeeded + "c", ' ');
		} else {
			annotatedData += " ";
		}
		
		//add a human-readable timestamp and end the line
		annotatedData += "[" + DateFormat.getDateTimeInstance().format(timestamp) + "]\n";
		
		//write the data to the file
		try {
			out.write(annotatedData);
			out.flush();
		} catch(IOException e) {
			System.err.println("Unable to write this line to the log file:");
			System.err.println(annotatedData);
			e.printStackTrace();
		}
	}
}
